name: CI Pipeline

env:
  DOCKER_IMAGE: ghcr.io/${{ github.repository }}:latest
  SONAR_PROJECT_KEY: your_project_key
  SONAR_ORGANIZATION: your_organization

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  # ─── JOB 1: Build and push the Docker image ──────────────────────────────
  build-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          # Adjust the cache path as needed
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .devcontainer
          file: ./Dockerfile
          push: true
          # Use the defined Docker image variable
          tags: ${{ env.DOCKER_IMAGE }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  # ─── JOB 2: Build the project ─────────────────────────────────────────────
  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: build-image
    container: ${{ env.DOCKER_IMAGE }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Configure CMake
        run: make configure
      - name: Build project
        run: make build

  # ─── JOB 3: Run tests ─────────────────────────────────────────────────────
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build
    container: ${{ env.DOCKER_IMAGE }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Execute tests
        run: make test

  # # ─── JOB 4: Generate coverage and run SonarCloud analysis ────────────────
  # coverage:
  #   name: Code Coverage & SonarCloud Analysis
  #   runs-on: ubuntu-latest
  #   needs: test
  #   container: $DOCKER_IMAGE
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #     - name: Generate Coverage Report
  #       run: |
  #         cd build
  #         # Replace with your actual coverage command (e.g., make coverage)
  #         make coverage
  #     - name: Run SonarCloud Scan
  #       uses: SonarSource/sonarcloud-github-action@master
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #       with:
  #         args: >
  #           -Dsonar.projectKey=$SONAR_PROJECT_KEY
  #           -Dsonar.organization=$SONAR_ORGANIZATION
  #           -Dsonar.host.url=https://sonarcloud.io

